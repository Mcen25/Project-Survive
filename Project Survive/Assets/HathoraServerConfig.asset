%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 022a2291b89c82040a8bd048c0fdd537, type: 3}
  m_Name: HathoraServerConfig
  m_EditorClassIdentifier: 
  _hathoraCoreOpts:
    _appId: 
    _existingAppsSelectedIndex: 0
    _existingAppsWithDeploymentSerializableSerializable:
    - _appId: app-5d47cf24-f1c9-4938-8f45-df25b504ec60
      _createdAtWrapper: 05/27/2024 20:47:46
      _createdBy: 
      _deletedBy: 
      _deletedAtWrapper: 
      _orgId: google-oauth2|116511045292135996210
      _appSecret: secret-80e6c4df-d541-4c92-bcbb-fbe57dd80671
      _appName: hathorasurvivetest
      deploymentSerializable:
        _env: []
        _roomsPerProcess: 0
        _additionalContainerPorts: []
        defaultContainerPortSerializable:
          _transportType: 1
          port: 7777
        _createdAtWrapper: 
        _createdBy: 
        _requestedMemoryMB: 0
        _requestedCPU: 0
        _deploymentId: 0
        _buildId: 0
        _appId: 
    _devAuthOpts:
      _hathoraDevToken: uy20vStt3211BbQ32G3dMxKuDVMvC9we1iOoJ-TEYCUT5
      _forceNewToken: 0
  _linuxHathoraAutoBuildOpts:
    _serverBuildDirName: Build-Server
    _serverBuildExeName: Hathora-Unity_LinuxServer.x86_64
    _isDevBuild: 1
    _cleanBuildDir: 1
    _overwriteDockerfile: 1
    _scriptingBackendIndex: 0
    _lastBuildLogsStr: "5/27/2024 4:50 PM\r\nPreparing local server build...\r\noverwriteExistingDockerfile?
      True\r\n\r\nCleaning/creating build dir @ path: `C:\\Users\\matth\\Documents\\Github\\Unity\\Project-Survive\\Project
      Survive\\Build-Server` ...\r\n\r\nConfiguring scripting backend: Mono2x\r\nBUILDING
      now (this may take a while), with opts:\r\n```\r\nscenes: `Assets/Scenes/Prototype
      Playroom.unity`, `Assets/Scenes/SampleScene.unity`\n\nlocationPathName: `C:\\Users\\matth\\Documents\\Github\\Unity\\Project-Survive\\Project
      Survive\\Build-Server\\Hathora-Unity_LinuxServer.x86_64`\ntarget: `StandaloneLinux64`\noptions:
      `None`\nstandaloneBuildSubtarget `1`\r\n```\r\n\r\nGenerating Dockerfile to
      `C:\\Users\\matth\\Documents\\Github\\Unity\\Project-Survive\\Project Survive\\.hathora\\Dockerfile`
      ...\r\n```\r\n############################################################################\n#
      This Dockerfile is auto-generated by HathoraDocker.cs @ 2024-05-27_165011\n############################################################################\n\n#
      Using 'Jammy Jellyfish' Ubuntu LTS\nFROM ubuntu:22.04\n\n# Update system and
      install certificates: Prevents TLS/SSL (https) errs, notably with UnityWebRequests\nRUN
      apt-get update && \\\n    apt-get install -y ca-certificates && \\\n    update-ca-certificates\n\n#
      Copy the server build files into the container, if Dockerfile is @ parent\nCOPY
      ./Build-Server .\n\n# Give execute permission for the script\nRUN chmod +x
      ./Hathora-Unity_LinuxServer.x86_64\n\n# Run the Linux server in headless mode
      as a dedicated server\n# Add `-scene <sceneName>` to load a scene before loading
      the mode\nCMD [ \\\n  \"./Hathora-Unity_LinuxServer.x86_64\", \\\r\n  \"-batchmode\",
      \\\r\n  \"-nographics\", \\\r\n  \"-mode\", \"server\" \\\n]\n\r\n```\r\n\r\n**BUILD
      SUCCESS: Succeeded**\r\nOpening build dir ...\r\n\r\nresult: Succeeded\r\ntotalSize:
      75MB\r\ntotalWarnings: 24\r\ntotalErrors: 1\r\n\r\n<color=#66B9A0>Completed</color>
      5/27/2024 4:51 PM (in 1m:22s)\r\nBUILD DONE\r\n"
  _hathoraDeployOpts:
    _roomsPerProcess: 1
    _planNameIndexIndex: 0
    _containerPortSerializableSerializable:
      _transportType: 1
      port: 7770
    _transportTypeIndex: 1
  _hathoraLobbyRoomOpts:
    _hathoraRegionIndex: 2
